import Head from "next/head";
import React, { useEffect, useState } from "react";
import Sidebar from "../../components/Sidebar";
import {
  Flex,
  Button,
  Box,
  Text,
  HStack,
  Image,
  VStack,
} from "@chakra-ui/react";
import { signOut, getSession } from "next-auth/react";
import { api_origin } from "../../constraint";
import axiosInstance from "../../services/axios";
import Post from "../../components/Post";

function Home(props) {
  const [post, setPost] = useState(props.post);

  useEffect(() => {
    const getPost = async () => {
      const res = await axiosInstance.get("/posts/timeline/all");
      setPost(res.data.data);
    };
    getPost();
  }, []);

  const renderPost = () => {
    return post.map((pst) => {
      return (
        <Post key={pst._id} post={pst} user={props.user}></Post>
        // <div key={pst._id}>
        //   <Text>{pst.desc}</Text>
        //   <Text>{pst.postedBy.username}</Text>
        //   <Text>{pst.likes.length}</Text>
        //   <Text>{pst.comments.length}</Text>
        // </div>
      );
    });
  };

  const onLogoutClick = async () => {
    await signOut();
  };
  return (
    <VStack>
      <Box backgroundColor={"gray.100"} mt="2" rounded="12">
        {!props.user.isVerified && (
          <HStack paddingBlock="1" paddingInline="6">
            <Text>Click to resend a verification and check your email</Text>
            <Button backgroundColor={"yellow.300"}>Resend</Button>
          </HStack>
        )}
      </Box>
      <Flex
        height="100vh"
        width="1300px"
        maxWidth="100vw"
        ms="auto"
        me="auto"
        padding="0 10px"
      >
        <Head>
          <title>Home</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <Sidebar />

        <Flex flexGrow={"0.4"} flexDirection="column" marginInline={2}>
          {renderPost()}
        </Flex>
        <Flex minWidth={"20vw"} marginLeft={6}>
          <Box position={"fixed"} top={2}>
            <HStack mb={2}>
              <Image
                marginTop={2}
                rounded="full"
                alt={"Login Image"}
                objectFit={"cover"}
                src={api_origin + props.user.profilePicture}
                width="50px"
                height="40px"
              />
              <Text>{`@${props.user.username}`}</Text>
            </HStack>
            <Button onClick={onLogoutClick} variant="ghost" w="100%">
              Logout
            </Button>
          </Box>
        </Flex>
      </Flex>
    </VStack>
  );
}

export async function getServerSideProps(context) {
  try {
    const session = await getSession({ req: context.req });

    if (!session) return { redirect: { destination: "/login" } };

    const { accessToken } = session.user;

    const config = {
      headers: { Authorization: `Bearer ${accessToken}` },
    };

    const res = await axiosInstance.get("/users/profile", config);
    const getPost = await axiosInstance.get("/posts/timeline/all");

    return {
      props: { user: res.data.data, post: getPost.data.data, session },
    };
  } catch (error) {
    console.error(error.response.data);
    return { props: {} };
  }
}

export default Home;
